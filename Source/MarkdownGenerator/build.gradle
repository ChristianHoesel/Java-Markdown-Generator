buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: "jacoco"
}

group 'net.steppschuh.markdowngenerator'
version = '1.2.1'

sourceCompatibility = 1.7
targetCompatibility = 1.7

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "Steppschuh"
            name "Stephan Schultz"
            email "contact@steppschuh.net"
        }
    }
    scm {
        connection 'https://github.com/Steppschuh/Java-Markdown-Generator.git'
        developerConnection 'https://github.com/Steppschuh/Java-Markdown-Generator.git'
        url "https://github.com/Steppschuh/Java-Markdown-Generator.git"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'net.steppschuh.markdowngenerator'
            artifactId 'markdowngenerator'
            version '1.2.1'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Java library to generate markdown')
                root.appendNode('name', 'Markdown Generator')
                root.appendNode('url', 'https://github.com/Steppschuh/Java-Markdown-Generator')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'Markdown-Generator'
        name = 'Markdown-Generator'
        licenses = ['Apache-2.0']
        labels = ['Markdown', 'Serialization']
        vcsUrl = 'https://github.com/Steppschuh/Java-Markdown-Generator.git'
        websiteUrl = 'https://github.com/Steppschuh/Java-Markdown-Generator'
        githubRepo = 'Steppschuh/Java-Markdown-Generator'
        githubReleaseNotesFile = 'README.md'
        version {
            name = '1.2.1'
            desc = 'Markdown Generator 1.2.1'
            released = new Date()
            vcsTag = '1.2.1'
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                user = project.hasProperty('mavenCentralUser') ? project.property('mavenCentralUser') : System.getenv('MAVEN_CENTRAL_USER')
                password = project.hasProperty('mavenCentralPassword') ? project.property('mavenCentralPassword') : System.getenv('MAVEN_CENTRAL_PASSWORD')
                close = '1'
            }
        }
    }
    filesSpec {
        from 'build/libs'
        into 'libs/'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

check.dependsOn jacocoTestReport

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}